swagger: "2.0"
info:
  description: "TEC WEB TP"
  version: "1.0.0"
  title: "tp tec web"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "tuliosousa1998@hotmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "arrumatica.ccomp.ufsj.edu.br"
basePath: "/v1"
tags:
- name: "consulta"
  description: "Gerenciamento de consultas"
- name: "usuario"
  description: "Gerenciamento de usuários"

schemes:
- "http"
paths:
  /consulta:
    post:
      tags:
      - "consulta"
      summary: "Adiciona uma consulta"
      operationId: "addConsulta"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto consulta a ser adicionada"
        required: true
        schema: 
          $ref: "#/definitions/consulta" 
      responses:
        200:
          description: "OK "     
          schema:
            $ref: "#/definitions/consulta" 

  /consulta/consultaPorUser:
    get:
      tags:
      - "consulta"
      summary: "Busca uma consulta pelo id do usuario"
      operationId: "getConsultaByIdusuario"
      produces:
      - "application/json"
      parameters:
      - name: "consultaidusuario"
        in: "query"
        description: "Id de uma consulta por usuario"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "OK "     
          schema:
            $ref: "#/definitions/consulta"   
        400:
          description: "id invalido"
        404: 
          description: "id não encontrado"
          
  /consulta/{consultaid}:
    get:
      tags:
      - "consulta"
      summary: "Busca uma consulta pelo id"
      operationId: "getConsultaById"
      produces:
      - "application/json"
      parameters:
      - name: "consultaid"
        in: "path"
        description: "Id de uma consulta"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "OK "     
          schema:
            $ref: "#/definitions/consulta"   
        400:
          description: "id invalido"
        404: 
          description: "id não encontrado"
            
    put:
      tags:
      - "consulta"
      summary: "Atualizar uma consulta"
      operationId: "putConsultaById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "consultaid"
        in: "path"
        description: "Id para atualizar"
        required: true
        type: "integer"
        format: "int64"
      - name: "body"
        in: "body"
        description: "Atualiza um id"
        schema:
          $ref: "#/definitions/consulta"  
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/consulta"      
        400:
          description: "id invalido"
        404: 
          description: "id não encontrado"
    
    delete:
      tags:
      - "consulta"
      summary: "Deleta uma consulta"
      operationId: "deleteConsultaById"
      produces:
      - "application/json"
      parameters:
      - name: "consultaid"
        in: "path"
        description: "Id para excluir"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/consulta"  
        400:
          description: "id invalido"
        404:
          description: "id não encontrado"
          
  /user:
    post:
      tags:
      - "usuario"
      summary: "Create user"
      description: "This can only be done by the logged in user."
      operationId: "createUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/usuario"
      responses:
        default:
          description: "successful operation"
  
  /user/login:
    get:
      tags:
      - "usuario"
      summary: "Logs user into the system"
      description: ""
      operationId: "loginUsuario"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "query"
        description: "The user name for login"
        required: true
        type: "string"
      - name: "password"
        in: "query"
        description: "The password for login in clear text"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "calls per hour allowed by the user"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
        "400":
          description: "Invalid username/password supplied"
  /user/logout:
    get:
      tags:
      - "usuario"
      summary: "Logs out current logged in user session"
      description: ""
      operationId: "logoutUsuario"
      produces:
      - "application/json"
      parameters: []
      responses:
        default:
          description: "successful operation"
  /user/{username}:
    get:
      tags:
      - "usuario"
      summary: "Get user by user name"
      description: ""
      operationId: "getUserByName"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "The name that needs to be fetched. Use user1 for testing. "
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/usuario"
        "400":
          description: "Invalid username supplied"
        "404":
          description: "User not found"
    put:
      tags:
      - "usuario"
      summary: "Updated user"
      description: "This can only be done by the logged in user."
      operationId: "updateUsuario"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "name that need to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated user object"
        required: true
        schema:
          $ref: "#/definitions/usuario"
      responses:
        "400":
          description: "Invalid user supplied"
        "404":
          description: "User not found"
    delete:
      tags:
      - "usuario"
      summary: "Delete user"
      description: "This can only be done by the logged in user."
      operationId: "deleteUsuario"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "The name that needs to be deleted"
        required: true
        type: "string"
      responses:
        "400":
          description: "Invalid username supplied"
        "404":
          description: "User not found" 
          
          
          
          
          
          
          
          
definitions:
  consulta:
    type: "object"
    properties:
      consultaid:
        type: "integer"
        format: "int64"
      consultaidusuario:
        type: "integer"
        format: "int64"
      categoria:
        type: "string"
      titulo:
        type: "string"
      descricao:
        type: "string"
        
  usuario:
    type: "object"
    properties:
      userid:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      password:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"

  